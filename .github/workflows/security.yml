name: Security & Dependencies

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'package.json'
      - 'package-lock.json'
  schedule:
    # Run weekly on Mondays at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

jobs:
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level=moderate

      - name: Check for known vulnerabilities
        run: |
          # Create audit report
          npm audit --json > audit-report.json || true
          
          # Check if there are any moderate or higher vulnerabilities
          if [ -f audit-report.json ]; then
            HIGH_VULNS=$(cat audit-report.json | jq '.metadata.vulnerabilities.high // 0')
            CRITICAL_VULNS=$(cat audit-report.json | jq '.metadata.vulnerabilities.critical // 0')
            
            if [ "$HIGH_VULNS" -gt 0 ] || [ "$CRITICAL_VULNS" -gt 0 ]; then
              echo "High or critical vulnerabilities found!"
              npm audit
              exit 1
            fi
          fi

      - name: Upload audit report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-audit-report
          path: audit-report.json
          retention-days: 30

  dependency-check:
    name: Dependency Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check for outdated dependencies
        run: |
          npm run dependencies:check > outdated-deps.txt || true
          
          if [ -s outdated-deps.txt ]; then
            echo "Outdated dependencies found:"
            cat outdated-deps.txt
            
            # Create a comment for PR if this is a pull request
            if [ "$GITHUB_EVENT_NAME" = "pull_request" ]; then
              echo "OUTDATED_DEPS_FOUND=true" >> $GITHUB_ENV
            fi
          else
            echo "All dependencies are up to date!"
          fi

      - name: Upload dependency report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: outdated-deps.txt
          retention-days: 30

      - name: Comment PR with outdated dependencies
        if: env.OUTDATED_DEPS_FOUND == 'true' && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            let outdatedDeps = '';
            try {
              outdatedDeps = fs.readFileSync('outdated-deps.txt', 'utf8');
            } catch (error) {
              console.log('No outdated dependencies file found');
              return;
            }
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: \`## ðŸ“¦ Outdated Dependencies Detected
              
              Some dependencies in this project are outdated:
              
              \\\`\\\`\\\`
              \${outdatedDeps}
              \\\`\\\`\\\`
              
              **Recommendation:** Consider updating dependencies using:
              - \\\`npm run dependencies:update\\\` to update all dependencies
              - Or update specific packages manually
              
              **Note:** Always test thoroughly after updating dependencies!
              \`
            });
